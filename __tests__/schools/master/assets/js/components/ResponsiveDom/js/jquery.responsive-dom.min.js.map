{"version":3,"sources":["jquery.responsive-dom.js"],"names":["factory","define","amd","jQuery","$","fn","responsiveDom","options","settings","extend","appendTo","mediaQuery","callback","sourceEl","this","placeholder","isMoved","init","updateDom","window","on","debounce","matchMedia","matches","moveElement","revertElement","document","contains","after","eq","append","remove","func","wait","timeout","clearTimeout","setTimeout"],"mappings":"CAIC,SAASA,GACT,YAEsB,mBAAXC,SAAyBA,OAAOC,IAC1CD,QAAQ,UAAWD,GAEnBA,EAAQG,SAER,SAASC,GACV,YAEAA,GAAEC,GAAGC,cAAgB,SAAUC,GAG9B,GAAIC,GAAWJ,EAAEK,QAChBC,SAAU,OACVC,WAAY,iBACZC,SAAU,MACRL,GAECM,EAAWC,KACXC,EAAc,KACdC,GAAU,EAKVC,EAAO,WAEVC,IAGAd,EAAEe,QAAQC,GAAG,uBAAwBC,EAASH,EAAW,OAMtDA,EAAY,WAEf,IAAKF,GAAWM,WAAWd,EAASG,YAAYY,QAC/CC,IACAR,GAAU,MACJ,CAAA,IAAIA,GAAYM,WAAWd,EAASG,YAAYY,QAItD,MAHAE,KACAT,GAAU,EAMsB,kBAAtBR,GAASI,UACnBJ,EAASI,SAASI,IAQhBQ,EAAc,aAEZE,SAASC,UAAYD,SAASC,SAASd,EAAS,OAEpDE,EAAcX,EAAE,iDAChBS,EAASe,MAAMb,GAGfX,EAAEI,EAASE,UAAUmB,GAAG,GAAGC,OAAOjB,KAQhCY,EAAgB,WAEC,OAAhBV,GAA0BW,SAASC,WAAYD,SAASC,SAASZ,EAAY,MAEhFA,EAAYa,MAAMf,GAElBE,EAAYgB,SACZhB,EAAc,OAWZM,EAAW,SAASW,EAAMC,GAC7B,GAAIC,EAEJ,OAAO,YACNC,aAAaD,GAEbA,EAAUE,WAAW,WACpBJ,KACEC,IAQL,OAHAhB,KAGOH","file":"jquery.responsive-dom.min.js","sourcesContent":["/**\r\n * A jQuery plugin to move elements in the DOM based on media queries\r\n * @param options\r\n */\r\n(function(factory) {\r\n\t'use strict';\r\n\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(['jquery'], factory);\r\n\t} else {\r\n\t\tfactory(jQuery);\r\n\t}\r\n}(function($) {\r\n\t'use strict';\r\n\r\n\t$.fn.responsiveDom = function (options) {\r\n\t\t// The settings object provides default settings.\r\n\t\t// The options argument can override them.\r\n\t\tvar settings = $.extend({\r\n\t\t\tappendTo: 'body',             // The provided object will be moved here...\r\n\t\t\tmediaQuery: '(min-width: 0)', // ...when this media query is true.\r\n\t\t\tcallback: null                // If provided, the callback will run after DOM updates.\r\n\t\t}, options);\r\n\r\n\t\tvar sourceEl = this;\r\n\t\tvar placeholder = null;\r\n\t\tvar isMoved = false;\r\n\r\n\t\t/**\r\n\t\t * Initializes the plugin\r\n\t\t */\r\n\t\tvar init = function() {\r\n\t\t\t// Update the DOM now...\r\n\t\t\tupdateDom();\r\n\r\n\t\t\t// ...and again when the window resizes\r\n\t\t\t$(window).on('resize.responsiveDom', debounce(updateDom, 100));\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Moves or reverts element DOM position if the media query conditions are met\r\n\t\t */\r\n\t\tvar updateDom = function() {\r\n\t\t\t// Check if media query conditions are met\r\n\t\t\tif (!isMoved && matchMedia(settings.mediaQuery).matches) {\r\n\t\t\t\tmoveElement();\r\n\t\t\t\tisMoved = true;\r\n\t\t\t} else if (isMoved && !matchMedia(settings.mediaQuery).matches) {\r\n\t\t\t\trevertElement();\r\n\t\t\t\tisMoved = false;\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Run callback function if provided\r\n\t\t\tif (typeof settings.callback === 'function') {\r\n\t\t\t\tsettings.callback(isMoved);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Creates a placeholder at the element's current DOM position and moves the\r\n\t\t * element to its new position\r\n\t\t */\r\n\t\tvar moveElement = function() {\r\n\t\t\t// Verify the source element still exists in the DOM\r\n\t\t\tif (!document.contains || document.contains(sourceEl[0])) {\r\n\t\t\t\t// Create placeholder so we can move it back if needed\r\n\t\t\t\tplaceholder = $('<span class=\"js-responsive-dom-placeholder\"/>');\r\n\t\t\t\tsourceEl.after(placeholder);\r\n\r\n\t\t\t\t// Move element\r\n\t\t\t\t$(settings.appendTo).eq(0).append(sourceEl);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns element to its previous position in the DOM and removes the\r\n\t\t * placeholder element\r\n\t\t */\r\n\t\tvar revertElement = function() {\r\n\t\t\t// Verify the placeholder still exists in the DOM\r\n\t\t\tif (placeholder !== null && (!document.contains || document.contains(placeholder[0]))) {\r\n\t\t\t\t// Move element back and remove placeholder\r\n\t\t\t\tplaceholder.after(sourceEl);\r\n\r\n\t\t\t\tplaceholder.remove();\r\n\t\t\t\tplaceholder = null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns a function that cannot be called in succession unless a specified\r\n\t\t * amount of time has passed\r\n\t\t * @param func - The function to debounce\r\n\t\t * @param wait - The wait time (ms) before running the function again\r\n\t\t * @returns The debounced function\r\n\t\t */\r\n\t\tvar debounce = function(func, wait) {\r\n\t\t\tvar timeout;\r\n\r\n\t\t\treturn function() {\r\n\t\t\t\tclearTimeout(timeout);\r\n\r\n\t\t\t\ttimeout = setTimeout(function() {\r\n\t\t\t\t\tfunc();\r\n\t\t\t\t}, wait);\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\t// Let's go!\r\n\t\tinit();\r\n\r\n\t\t// Always return the target object to allow chaining.\r\n\t\treturn this;\r\n\t};\r\n}));\r\n"],"sourceRoot":"/source/"}